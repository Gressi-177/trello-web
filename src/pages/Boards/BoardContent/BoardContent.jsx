import { DndContext, MouseSensor, TouchSensor, useSensor, useSensors } from '@dnd-kit/core'
import { arrayMove } from '@dnd-kit/sortable'
import Box from '@mui/material/Box'
import { useEffect, useState } from 'react'
import { mapOrder } from '~/utils/sorts'
import ListColumns from './ListColumns/ListColumns'

function BoardContent({ board }) {
  //YÃªu cáº§u chuá»™t di chuyá»ƒn Ã­t nháº¥t 10px trÆ°á»›c khi kÃ­ch hoáº¡t sá»± kiá»‡n
  const mouseSensor = useSensor(MouseSensor, { activationConstraint: { distance: 10 } })
  // Nháº¥n giá»¯ 250ms vÃ  dung sai cáº£m á»©ng 500px trÆ°á»›c khi kÃ­ch hoáº¡t sá»± kiá»‡n
  const touchSensor = useSensor(TouchSensor, { activationConstraint: { delay: 250, tolerance: 500 } })
  // Æ¯u tiÃªn sá»­ dá»¥ng káº¿t há»£p cáº£m biáº¿n chuá»™t vÃ  cáº£m biáº¿n cháº¡m Ä‘á»ƒ cÃ³ tráº£i nghiá»‡m tá»‘t nháº¥t trÃªn cáº£ mÃ¡y tÃ­nh vÃ  thiáº¿t bá»‹ di Ä‘á»™ng
  const sensors = useSensors(mouseSensor, touchSensor)

  const [orderedColumnsState, setOrderedColumnsState] = useState([])

  useEffect(() => {
    setOrderedColumnsState(mapOrder(board?.columns, board?.columnOrderIds, '_id'))
  }, [board])

  const handleDragEnd = (event) => {
    const { active, over } = event

    if (!over) return

    if (active.id !== over.id) {
      const oldIndex = orderedColumnsState.findIndex((c) => c._id === active.id)
      const newIndex = orderedColumnsState.findIndex((c) => c._id === over.id)

      const dndOrderedColumns = arrayMove(orderedColumnsState, oldIndex, newIndex)
      // console.log('ðŸš€ ~ handleDragEnd ~ dndOrderedColumns:', dndOrderedColumns)
      // const dndColumnOrderIds = dndOrderedColumns.map((c) => c._id)
      // console.log('ðŸš€ ~ handleDragEnd ~ dndColumnOrderIds:', dndColumnOrderIds)
      setOrderedColumnsState(dndOrderedColumns)
    }
  }
  return (
    <DndContext onDragEnd={handleDragEnd} sensors={sensors}>
      <Box
        sx={{
          width: '100%',
          height: (theme) => theme.trello.boardContentHeight,
          backgroundColor: (theme) => (theme.palette.mode === 'dark' ? '#34495e' : '#1976d2'),
          p: '10px 0'
        }}
      >
        <ListColumns columns={orderedColumnsState} />
      </Box>
    </DndContext>
  )
}

export default BoardContent
